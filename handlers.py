from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from services.analyzer import get_answer
from services.balance import get_balance
from utils.logging import logger

router = Router()


@router.message(Command("start"))
async def handle_start(message: Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø - —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∫–æ–º–ø–∞–Ω–∏–∏ HRlink.\n\n"
        "–ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏, –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∏–ª–∏ —É—Å–ª—É–≥–∞—Ö, "
        "–∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π.\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/help - —Å–ø—Ä–∞–≤–∫–∞\n"
        "/balance - –±–∞–ª–∞–Ω—Å API"
    )


@router.message(Command("help"))
async def handle_help(message: Message):
    await message.answer(
        "‚ÑπÔ∏è –Ø –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ:\n"
        "- –ù–∞—à–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∏ —É—Å–ª—É–≥–∞—Ö\n"
        "- –£—Å–ª–æ–≤–∏—è—Ö –≤–Ω–µ–¥—Ä–µ–Ω–∏—è\n"
        "- –ö–æ–Ω—Ç–∞–∫—Ç–∞—Ö –∫–æ–º–ø–∞–Ω–∏–∏\n"
        "- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç!"
    )


@router.message(Command("balance"))
async def handle_balance(message: Message):
    balance = await get_balance()
    if balance is None:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å API")
    else:
        await message.answer(f"üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å API: {balance} —Ä—É–±.")


@router.message(F.text)
async def handle_question(message: Message):
    try:
        if len(message.text) < 3:
            await message.answer(
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –±–æ–ª–µ–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –≤–æ–ø—Ä–æ—Å."
                )
            return

        await message.bot.send_chat_action(message.chat.id, "typing")
        answer = await get_answer(message.text)
        await message.answer(answer)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–∞: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.")
